{"version":3,"sources":["components/NavBar/index.js","modules/Login/actions/index.js","modules/Home/index.js","modules/Home/actions/index.js","constants/globalFunction.js","modules/CopyClip/index.js","modules/CameraRecord/index.js","router/AuthRoute.js","modules/Login/index.js","modules/SignUp/index.js","components/Card/index.js","modules/LandingPage/index.js","App.js","serviceWorker.js","redux/homeReducer.js","redux/loginReducer.js","redux/index.js","index.js"],"names":["NavBar","props","heading","logout","buttonName","buttonClass","className","onClick","defaultProps","authenticateUserAction","response","localStorage","setItem","dispatch","type","payload","ReactFC","fcRoot","FusionCharts","Charts","FusionTheme","Container","styled","div","TopWrapper","Home","useDispatch","useState","Date","startDate","setStartDate","endDate","setEndDate","pageNumber","setPageNumber","pageSize","setPageSize","isError","setIsError","loadingState","setLoadingState","currentStateData","useSelector","state","homeData","data","getPageSizes","value","name","dateConversion","date","newFormat","mm","getMonth","dd","getDate","yy","getFullYear","toString","slice","yyyy","toastMessage","toastType","message","toast","dismiss","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Fragment","selected","onChange","dates","start","end","selectsRange","inline","id","placeholder","event","target","newStartDate","newEndDate","a","newUrl","axios","get","status","array","items","forEach","object","count","string","newString","b","split","c","join","charAt","toUpperCase","capitalizeFirstLetter","width","height","dataFormat","dataSource","chart","caption","xAxisName","yAxisName","numberSuffix","theme","geStackExchanegeData","then","res","length","Object","keys","style","margin","CopyClip","match","useLocation","search","textAreaRef","useRef","marginTop","ref","readOnly","e","current","select","document","execCommand","focus","success","CameraRecord","onTakePhoto","dataUri","console","log","handleTakePhoto","onCameraStart","onCameraStop","onCameraError","idealResolution","AuthRoute","isValidUser","exact","path","component","to","StyledLabel","label","Login","toastVisible","error","fields","email","password","errors","form","ReactFormInputValidation","useRules","onformsubmit","getItem","history","push","onSubmit","this","handleSubmit","onBlur","handleBlurEvent","handleChangeEvent","autoComplete","React","Component","withRouter","connect","bindActionCreators","SignUp","confirmPassword","Card","handleClick","signup","login","role","href","LandingPage","onClickHandle","setState","signUp","App","render","from","Boolean","window","location","hostname","initialState","modalPopUp","getCurrentStatus","JSON","parse","rootReducer","combineReducers","action","store","createStore","reducer","compose","applyMiddleware","thunk","ReduxPromise","__REDUX_DEVTOOLS_EXTENSION__","trace","traceLimit","f","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.86613311.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function NavBar(props) {\n  const { heading, logout, buttonName, buttonClass } = props;\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-light\">\n        <div className=\"d-flex flex-row justify-content-between\">\n          <div>\n            <h4>\n              <b>{heading}</b>\n            </h4>\n          </div>\n          <div>\n            <button className={buttonClass} onClick={() => logout()}>\n              {buttonName}{\" \"}\n            </button>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nNavBar.defaultProps = {\n  heading: \"Default\",\n  logout: () => {},\n  buttonName: \"Logout\",\n  buttonClass: \"btn-primary\",\n};\n\nNavBar.propTypes = {\n  heading: PropTypes.string,\n  logout: PropTypes.func,\n  buttonName: PropTypes.string,\n  buttonClass: PropTypes.string,\n};\n","import { GET_DATA } from \"../../Home/actions\";\nimport data from \"../../../constants/data.json\";\n\nexport const IS_VALID_USER = \"IS_VALID_USER\";\n\nexport function authenticateUserAction(response) {\n  localStorage.setItem(\"isValid\", response);\n  return (dispatch) => {\n    dispatch({\n      type: IS_VALID_USER,\n      payload: response,\n    });\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./style.css\";\nimport { bindActionCreators } from \"redux\";\nimport { geStackExchanegeData } from \"./actions\";\nimport NavBar from \"../../components/NavBar\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport DatePicker from \"react-datepicker\";\n\nimport FusionCharts from \"fusioncharts\";\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFC from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nconst Container = styled.div`\n  margin-top: 100px;\n`;\n\nconst TopWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 0% 10%;\n  @media (max-width: 840px) {\n    padding: 0% 5%;\n  }\n  @media (max-width: 720px) {\n    display: block;\n  }\n`;\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(null);\n  const [pageNumber, setPageNumber] = useState();\n  const [pageSize, setPageSize] = useState();\n  const [isError, setIsError] = useState(false);\n  const [loadingState, setLoadingState] = useState(false);\n\n  const onChange = (dates) => {\n    setIsError(false);\n    const [start, end] = dates;\n    setStartDate(start);\n    setEndDate(end);\n  };\n  const currentStateData = useSelector((state) => state?.homeData?.data);\n  const getPageSizes = (value, name) => {\n    setIsError(false);\n    if (name === \"size\") {\n      setPageSize(value);\n    } else if (name === \"pageNumber\") {\n      setPageNumber(value);\n    }\n  };\n  const dateConversion = (date) => {\n    const newFormat = {\n      mm: date.getMonth() + 1,\n      dd: date.getDate(),\n      yy: date.getFullYear().toString().slice(-2),\n      yyyy: date.getFullYear(),\n    };\n    const newFormat2 = `${newFormat.yyyy}-${\n      newFormat.mm > 9 ? newFormat.mm : \"0\" + newFormat.mm\n    }-${newFormat.dd > 9 ? newFormat.dd : \"0\" + newFormat.dd}`;\n    return newFormat2;\n  };\n  const filteredData = () => {\n    if (\n      endDate !== null &&\n      pageNumber !== undefined &&\n      pageNumber !== \"\" &&\n      pageSize !== undefined &&\n      pageSize !== \"\"\n    ) {\n      setLoadingState(true);\n      const newStartDate = dateConversion(startDate);\n      const newEndDate = dateConversion(endDate);\n      dispatch(\n        geStackExchanegeData(newStartDate, newEndDate, pageSize, pageNumber)\n      ).then((res) => {\n        toast.dismiss();\n\n        setLoadingState(false);\n        if (res?.data?.items.length === 0) {\n          setIsError(true);\n        } else {\n          toastMessage(\"success\", \"Data successfully fetched.\");\n        }\n      });\n    } else {\n      toastMessage(\"error\", \"Please fill all the details.\");\n    }\n  };\n  const toastMessage = (toastType, message) => {\n    toast.dismiss();\n    toast[toastType](message, {\n      position: \"top-right\",\n      autoClose: 1800,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Container>\n        {!loadingState ? (\n          <>\n            <TopWrapper>\n              <div className=\"form-group\">\n                <label>Start & End Date</label>\n                <DatePicker\n                  selected={startDate}\n                  onChange={onChange}\n                  startDate={startDate}\n                  endDate={endDate}\n                  selectsRange\n                  inline\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Page number</label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  id=\"input2\"\n                  name=\"pageNumber\"\n                  placeholder=\"Page number\"\n                  value={pageNumber}\n                  onChange={(event) =>\n                    getPageSizes(event.target.value, \"pageNumber\")\n                  }\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Page Size</label>\n                <input\n                  className=\"form-control\"\n                  type=\"text\"\n                  id=\"input1\"\n                  name=\"size\"\n                  placeholder=\"Page Size\"\n                  value={pageSize}\n                  onChange={(event) => getPageSizes(event.target.value, \"size\")}\n                />\n              </div>\n            </TopWrapper>\n            <div>\n              <button className=\"btn btn-primary\" onClick={filteredData}>\n                Filter\n              </button>\n            </div>\n            {Object.keys(currentStateData).length > 0 &&\n              currentStateData?.dataSource?.data.length > 0 && (\n                <div style={{ margin: \"50px 0px\" }}>\n                  <ReactFC {...currentStateData} />\n                </div>\n              )}\n            {isError && (\n              <>\n                {toastMessage(\n                  \"warn\",\n                  \"No data found. Please fill the detail again\"\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <div>loading...</div>\n        )}\n      </Container>\n    </React.Fragment>\n  );\n  // }\n};\n\nexport default Home;\n","import axios from \"axios\";\nimport { requiredData } from \"../../../constants/globalFunction.js\";\n\nexport const GET_DATA = \"GET_DATA\";\nexport const MODAL_POP_UP = \"MODAL_POP_UP\";\n\nconst URL = \"https://api.stackexchange.com/tags?\";\n\nexport const geStackExchanegeData = (\n  newStartDate,\n  newEndDate,\n  pageSize,\n  pageNumber\n) => async (dispatch) => {\n  try {\n    const newUrl = `${URL}page=${pageNumber}&pagesize=${pageSize}&fromdate=${newStartDate}&todate=${newEndDate}&order=desc&sort=popular&site=stackoverflow`;\n    const response = await axios.get(newUrl);\n    if (response?.status === 200) {\n      dispatch({\n        type: GET_DATA,\n        payload: requiredData(response?.data?.items),\n      });\n    }\n    return response;\n  } catch (ex) {\n    return ex;\n  }\n};\n\n//-----Modal popup-------//\nexport function modalPopUp(value) {\n  return (dispatch) => {\n    dispatch({\n      type: MODAL_POP_UP,\n      payload: value,\n    });\n  };\n}\n","export const requiredData = (array) => {\n  array.forEach((object) => {\n    if (object.name || object.count) {\n      object[\"label\"] = capitalizeFirstLetter(object.name);\n      object[\"value\"] = object.count;\n    }\n  });\n  return {\n    type: \"column2d\",\n    width: 800,\n    height: 400,\n    dataFormat: \"json\",\n    dataSource: {\n      chart: {\n        caption: \"Stack Exchange\",\n        // subCaption: \"\",\n        xAxisName: \"Language\",\n        yAxisName: \"Counts\",\n        numberSuffix: \"K\",\n        theme: \"fusion\",\n      },\n      data: array,\n    },\n  };\n};\n\nfunction capitalizeFirstLetter(string) {\n  var b = string.split(\"-\");\n  let newString;\n  if (b === -1) {\n    newString = string;\n  } else {\n    let c = b.join(\" \");\n    newString = c;\n  }\n  return newString.charAt(0).toUpperCase() + newString.slice(1);\n}\n","import React, { useState, useRef } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst CopyClip = (props) => {\n  const { search } = useLocation();\n  const match = search.match(/q=(.*)/);\n  const type = match?.[1];\n  const textAreaRef = useRef(null);\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand(\"copy\");\n    e.target.focus();\n    toast.dismiss();\n    toast.success(\"Great job! Copied.\", {\n      position: \"top-right\",\n      autoClose: 1800,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n\n  return (\n    <div style={{ marginTop: \"100px\" }}>\n      <form>\n        <textarea ref={textAreaRef} value={type} readOnly />\n      </form>\n      <div>\n        <button className=\"btn btn-primary\" onClick={copyToClipboard}>\n          Copy\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CopyClip;\n","import React from \"react\";\nimport Camera from \"react-html5-camera-photo\";\nimport \"react-html5-camera-photo/build/css/index.css\";\n\nconst CameraRecord = () => {\n  function handleTakePhoto(dataUri) {\n    // Do stuff with the photo...\n    console.log(\"takePhoto....\", dataUri);\n  }\n  return (\n    <div>\n      {\" \"}\n      <Camera\n        onTakePhoto={(dataUri) => {\n          handleTakePhoto(dataUri);\n        }}\n        onCameraStart={() => console.log(\"on camera on\")}\n        onCameraStop={() => console.log(\"on camera staop\")}\n        onCameraError={() => console.log(\"on camera Errro\")}\n        idealResolution={{ width: 640, height: 480 }}\n      />\n    </div>\n  );\n};\n\nexport default CameraRecord;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Home from \"../modules/Home\";\nimport CopyClip from \"../modules/CopyClip\";\nimport NavBar from \"../components/NavBar\";\nimport CameraRecord from \"../modules/CameraRecord\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authenticateUserAction } from \"../modules/Login/actions\";\n\nexport default function AuthRoute(props) {\n  const { isValidUser } = props;\n  const dispatch = useDispatch();\n  return (\n    <div>\n      {isValidUser ? (\n        <>\n          <NavBar\n            logout={() => dispatch(authenticateUserAction(false))}\n            heading={\"Zolve\"}\n            buttonName={\"Logout\"}\n            buttonClass=\"btn btn-primary\"\n          />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/camera\" component={CameraRecord} />\n          <Route exact path=\"/\" component={CopyClip} />\n        </>\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport \"./style.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { authenticateUserAction } from \"../Login/actions\";\nimport styled from \"styled-components\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst StyledLabel = styled.label`\n  text-align: left;\n`;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        email: \"\",\n        password: \"\",\n      },\n      errors: {},\n    };\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n      email: \"required|email\",\n      password: \"required\",\n    });\n    this.form.onformsubmit = (fields) => {\n      if (\n        localStorage.getItem(\"email\") === null &&\n        localStorage.getItem(\"password\") === null\n      )\n        return this.toastVisible(\"not registered please registered first\");\n      else if (localStorage.getItem(\"email\") !== fields.email)\n        return this.toastVisible(\"email not matched\");\n      else if (localStorage.getItem(\"password\") !== fields.password)\n        return this.toastVisible(\"password not matched\");\n      else {\n        this.props.authenticateUserAction(true);\n        this.props.history.push(\"/home\");\n      }\n    };\n  }\n\n  toastVisible = (message) => {\n    toast.dismiss();\n    toast.error(message, {\n      position: \"top-right\",\n      autoClose: 1500,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.form.handleSubmit}>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Email\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.email}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.email ? this.state.errors.email : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.password}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.password ? this.state.errors.password : \"\"}\n            </label>\n          </p>\n\n          <p>\n            <button type=\"submit\" className=\"btn btn-secondary\">\n              Submit\n            </button>\n          </p>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ isValidUser }) => {\n  return { isValidUser };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatch,\n    ...bindActionCreators({ authenticateUserAction }, dispatch),\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","import React from \"react\";\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport \"./style.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLabel = styled.label`\n  text-align: left;\n`;\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n      },\n      errors: {},\n    };\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n      name: \"required\",\n      email: \"required|email\",\n      password: \"required\",\n      confirmPassword: \"required\",\n    });\n    this.form.onformsubmit = (fields) => {\n      if (fields.password !== fields.confirmPassword) {\n        console.log(\"password not matched\");\n      } else {\n        localStorage.setItem(\"email\", fields.email);\n        localStorage.setItem(\"password\", fields.password);\n        this.props.history.push(\"/\");\n      }\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <form onSubmit={this.form.handleSubmit}>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Name\n              <input\n                type=\"name\"\n                name=\"name\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.name}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.name ? this.state.errors.name : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Email\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.email}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.email ? this.state.errors.email : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Password\n              <input\n                type=\"password\"\n                name=\"password\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.password}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.password ? this.state.errors.password : \"\"}\n            </label>\n          </p>\n          <p className=\"custom-input\">\n            <StyledLabel>\n              Confirm Password\n              <input\n                type=\"password\"\n                name=\"confirmPassword\"\n                className=\"mt-2 form-control\"\n                onBlur={this.form.handleBlurEvent}\n                onChange={this.form.handleChangeEvent}\n                value={this.state.fields.confirmPassword}\n                autoComplete=\"off\"\n              />\n            </StyledLabel>\n            <label className=\"error\">\n              {this.state.errors.confirmPassword\n                ? this.state.errors.confirmPassword\n                : \"\"}\n            </label>\n          </p>\n\n          <p>\n            <button type=\"submit\" className=\"btn btn-secondary\">\n              Submit\n            </button>\n          </p>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(SignUp);\n","import React, { Component } from 'react';\nimport './style.scss';\nimport '../../assets/styles/variable.scss';\nimport Login from '../../modules/Login/index';\nimport SignUp from '../../modules/SignUp/index';\n\n\nexport default class Card extends Component {\n\n    render() {\n        const { handleClick, signup, login } = this.props;\n        return (\n            <React.Fragment>\n                <div className=\"custom-card\">\n                    {login ? (\n                        <div>\n                            <Login></Login>\n                            <div className=\"mt-2 d-flex\">\n                                <span>click here to</span>\n                                <div role=\"link\" onClick={() => handleClick(\"signup\")} className=\"card-link ml-1\"> Sign Up?</div>\n                            </div>\n                        </div>\n                    ) : null}\n                    {signup ? (\n                        <div>\n                            <SignUp></SignUp>\n                            <div className=\"mt-2 d-flex\">\n                                <span>click here to</span>\n                                <div role=\"link\" onClick={() => handleClick(\"login\")} href=\"0\" className=\"card-link ml-1\"> Login</div>\n                            </div>\n                        </div>\n                    ) : null}\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Card from '../../components/Card';  \nimport './style.scss';\n\n\n\n\nexport default class LandingPage extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            signUp:false,\n            login:true\n        }\n    }\n   \n    \n    onClickHandle=(value)=>{\n    if(value === \"login\") return this.setState({login:true,signUp:false})\n    else return this.setState({login:false,signUp:true})\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='main-container'>\n                    <div className=\"sub-container\">\n                        <div className=\"login-page\"></div>\n                        <Card signup={this.state.signUp} login={this.state.login} handleClick={this.onClickHandle}></Card>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AuthRoute from \"./router/AuthRoute\";\nimport Login from \"./modules/Login\";\nimport PropTypes from \"prop-types\";\nimport LandingPage from \"./modules/LandingPage\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact={true} path=\"/login\" component={LandingPage} />\n          <AuthRoute isValidUser={props.isValidUser} />\n          <Route\n            path=\"/\"\n            render={() => <Redirect from=\"/\" to=\"/login\" />}\n          ></Route>\n          <Redirect from=\"*\" to=\"/login\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst mapStateToProps = ({ isValidUser }) => {\n  return { isValidUser };\n};\nexport default connect(mapStateToProps, null)(App);\n\nApp.defaultProps = {\n  isValidUser: false,\n};\nApp.propTypes = {\n  isValidUser: PropTypes.bool,\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { GET_DATA,MODAL_POP_UP } from \"../modules/Home/actions\";\n\nconst initialState = {\n  data: [],\n  modalPopUp:false\n};\n\nexport const homeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return { data: action.payload };\n    case MODAL_POP_UP:\n      return {\n        ...state,\n        modalPopUp: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { IS_VALID_USER } from \"../modules/Login/actions\";\n\nconst getCurrentStatus = JSON.parse(localStorage.getItem(\"isValid\"));\n\nexport const loginReducer = (state = getCurrentStatus, action) => {\n  switch (action.type) {\n    case IS_VALID_USER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { homeReducer } from \"./homeReducer\";\nimport { loginReducer } from \"./loginReducer\";\n\nconst rootReducer = combineReducers({\n  homeData:homeReducer,\n  isValidUser:loginReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport reducer from \"./redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport ReduxPromise from \"redux-promise\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst store = createStore(\n  reducer,\n  compose(\n    applyMiddleware(thunk, ReduxPromise),\n    window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__({ trace: true, traceLimit: 25 })\n      : (f) => f\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ToastContainer />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}